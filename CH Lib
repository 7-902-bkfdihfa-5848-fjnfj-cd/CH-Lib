-- CloudHubModuleScript
-- c
local CloudHub = {}
CloudHub.__index = CloudHub

-- Function to create the main UI
function CloudHub:Initialize()
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- Remove existing GUI if it exists
    local existingGui = playerGui:FindFirstChild("CloudHubPrivateUi")
    if existingGui then
        existingGui:Destroy()
    end

    -- Create the ScreenGui
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = "CloudHubPrivateUi"
    self.screenGui.Parent = playerGui

    -- Create the main frame
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Size = UDim2.new(0, 696, 0, 427)
    self.mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    self.mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    self.mainFrame.BackgroundColor3 = Color3.fromRGB(8, 10, 13)
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Parent = self.screenGui

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 10)
    uiCorner.Parent = self.mainFrame

    -- Title
    self.titleLabel = Instance.new("TextLabel")
    self.titleLabel.Text = "Cloud Hub"
    self.titleLabel.Size = UDim2.new(0, 200, 0, 40)
    self.titleLabel.Position = UDim2.new(0.5, -100, 0, 10)
    self.titleLabel.AnchorPoint = Vector2.new(0.5, 0)
    self.titleLabel.Font = Enum.Font.GothamBold
    self.titleLabel.TextSize = 24
    self.titleLabel.TextColor3 = Color3.new(1, 1, 1)
    self.titleLabel.BackgroundTransparency = 1
    self.titleLabel.Parent = self.mainFrame

    -- Close Button
    local closeButton = Instance.new("ImageButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 20)
    closeButton.AnchorPoint = Vector2.new(0.5, 0.5)
    closeButton.BackgroundTransparency = 1
    closeButton.Image = "rbxassetid://6035047409"
    closeButton.ImageColor3 = Color3.new(1, 1, 1)
    closeButton.Parent = self.mainFrame

    -- Minimize/Maximize Button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Text = "–"
    minimizeButton.Size = UDim2.new(0, 50, 0, 50)
    minimizeButton.Position = UDim2.new(1, -90, 0, 20)
    minimizeButton.AnchorPoint = Vector2.new(0.5, 0.5)
    minimizeButton.BackgroundTransparency = 1
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.TextSize = 30
    minimizeButton.TextColor3 = Color3.new(1, 1, 1)
    minimizeButton.Parent = self.mainFrame

    -- Separator Line
    local separatorLine = Instance.new("Frame")
    separatorLine.Size = UDim2.new(1, 0, 0, 2)
    separatorLine.Position = UDim2.new(0, 0, 0, 55)
    separatorLine.BackgroundColor3 = Color3.fromRGB(23, 25, 29)
    separatorLine.BorderSizePixel = 0
    separatorLine.Parent = self.mainFrame

    -- Avatar Outline
    self.avatarOutline = Instance.new("Frame")
    self.avatarOutline.Size = UDim2.new(0, 100, 0, 100)
    self.avatarOutline.Position = UDim2.new(0, 20, 0, 70)
    self.avatarOutline.BackgroundColor3 = Color3.fromRGB(23, 25, 29)
    self.avatarOutline.BorderSizePixel = 0
    self.avatarOutline.ClipsDescendants = true
    self.avatarOutline.Parent = self.mainFrame

    local avatarHeadshot = Instance.new("ImageLabel")
    avatarHeadshot.Size = UDim2.new(1, -10, 1, -10)
    avatarHeadshot.Position = UDim2.new(0, 5, 0, 5)
    avatarHeadshot.BackgroundTransparency = 1
    avatarHeadshot.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. tostring(player.UserId) .. "&width=420&height=420&format=png"
    avatarHeadshot.ClipsDescendants = true
    avatarHeadshot.Parent = self.avatarOutline

    local avatarUICorner = Instance.new("UICorner")
    avatarUICorner.CornerRadius = UDim.new(0, 50)
    avatarUICorner.Parent = self.avatarOutline

    -- DisplayName Label
    self.displayNameLabel = Instance.new("TextLabel")
    self.displayNameLabel.Text = player.DisplayName
    self.displayNameLabel.Size = UDim2.new(0, 200, 0, 30)
    self.displayNameLabel.Position = UDim2.new(0, 132, 0, 70)
    self.displayNameLabel.Font = Enum.Font.GothamBold
    self.displayNameLabel.TextSize = 18
    self.displayNameLabel.TextColor3 = Color3.new(1, 1, 1)
    self.displayNameLabel.BackgroundTransparency = 1
    self.displayNameLabel.TextXAlignment = Enum.TextXAlignment.Left
    self.displayNameLabel.Parent = self.mainFrame

    -- Status Label
    self.statusLabel = Instance.new("TextLabel")
    self.statusLabel.Text = "Free User"
    self.statusLabel.Size = UDim2.new(0, 200, 0, 30)
    self.statusLabel.Position = UDim2.new(0, 132, 0, 105)
    self.statusLabel.Font = Enum.Font.GothamBold
    self.statusLabel.TextSize = 18
    self.statusLabel.TextColor3 = Color3.fromRGB(100, 102, 105)
    self.statusLabel.BackgroundTransparency = 1
    self.statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    self.statusLabel.Parent = self.mainFrame

    -- Tabs container
    self.tabsContainer = Instance.new("Frame")
    self.tabsContainer.Size = UDim2.new(1, -40, 0, 40)
    self.tabsContainer.Position = UDim2.new(0, 20, 0, 150)
    self.tabsContainer.BackgroundColor3 = Color3.fromRGB(30, 32, 36)
    self.tabsContainer.BorderSizePixel = 0
    self.tabsContainer.Parent = self.mainFrame

    -- Tabs content container
    self.tabsContent = Instance.new("Frame")
    self.tabsContent.Size = UDim2.new(1, -40, 1, -190)
    self.tabsContent.Position = UDim2.new(0, 20, 0, 200)
    self.tabsContent.BackgroundColor3 = Color3.fromRGB(8, 10, 13)
    self.tabsContent.BorderSizePixel = 0
    self.tabsContent.Visible = false
    self.tabsContent.Parent = self.mainFrame

    self.tabButtons = {}
    self.tabContents = {}

    -- Minimize/Maximize functionality
    local isMinimized = false
    local function toggleMinimize()
        if isMinimized then
            self.mainFrame:TweenSize(UDim2.new(0, 696, 0, 427), "Out", "Quad", 0.5, true)
            self.titleLabel.Visible = true
            self.statusLabel.Visible = true
            minimizeButton.Text = "–"
            separatorLine.Visible = true
            self.avatarOutline.Visible = true
            self.displayNameLabel.Visible = true
            self.tabsContainer.Visible = true
            self.tabsContent.Visible = true
        else
            self.mainFrame:TweenSize(UDim2.new(0, 696, 0, 50), "Out", "Quad", 0.5, true)
            self.titleLabel.Visible = true
            self.titleLabel.Position = UDim2.new(0.5, -self.titleLabel.Size.X.Offset / 2, 0.5, -self.titleLabel.Size.Y.Offset / 2)
            minimizeButton.Text = "+"
            separatorLine.Visible = false
            self.avatarOutline.Visible = false
            self.displayNameLabel.Visible = false
            self.statusLabel.Visible = false
            self.tabsContainer.Visible = false
            self.tabsContent.Visible = false
        end
        isMinimized = not isMinimized
    end

    minimizeButton.MouseButton1Click:Connect(toggleMinimize)
    closeButton.MouseButton1Click:Connect(function()
        self.screenGui:Destroy()
    end)

    -- Make the frame draggable
    local dragging = false
    local dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        self.mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = self.mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end

    local function onInputChanged(input)
        if dragging then
            update(input)
        end
    end

    self.mainFrame.InputBegan:Connect(onInputBegan)
    self.mainFrame.InputChanged:Connect(onInputChanged)
end

-- Function to create a new tab
function CloudHub:MakeTab(tabInfo)
    local name = tabInfo.Name
    local iconId = tabInfo.Icon
    local content = tabInfo.Content

    -- Create tab button
    local tabButton = Instance.new("TextButton")
    tabButton.Size = UDim2.new(1 / (#self.tabButtons + 1), 0, 1, 0)
    tabButton.Text = name
    tabButton.TextSize = 14
    tabButton.BackgroundColor3 = Color3.fromRGB(40, 42, 46)
    tabButton.TextColor3 = Color3.new(1, 1, 1)
    tabButton.Font = Enum.Font.Gotham
    tabButton.Parent = self.tabsContainer

    local tabIcon = Instance.new("ImageLabel")
    tabIcon.Size = UDim2.new(0, 20, 0, 20)
    tabIcon.Position = UDim2.new(0, 10, 0, 10)
    tabIcon.BackgroundTransparency = 1
    tabIcon.Image = "rbxassetid://" .. iconId
    tabIcon.Parent = tabButton

    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, 0, 1, 0)
    contentFrame.BackgroundColor3 = Color3.fromRGB(8, 10, 13)
    contentFrame.BorderSizePixel = 0
    contentFrame.Visible = false
    contentFrame.Parent = self.tabsContent

    if content then
        content.Parent = contentFrame
    end

    -- Auto-align tabs
    local totalTabs = #self.tabButtons + 1
    for i, button in ipairs(self.tabButtons) do
        button.Size = UDim2.new(1 / totalTabs, 0, 1, 0)
        button.Position = UDim2.new((i - 1) / totalTabs, 0, 0, 0)
    end

    tabButton.Position = UDim2.new((totalTabs - 1) / totalTabs, 0, 0, 0)
    tabButton.Size = UDim2.new(1 / totalTabs, 0, 1, 0)

    self.tabButtons[name] = tabButton
    self.tabContents[name] = contentFrame

    tabButton.MouseButton1Click:Connect(function()
        for _, button in pairs(self.tabButtons) do
            button.BackgroundColor3 = Color3.fromRGB(40, 42, 46)
        end
        for _, frame in pairs(self.tabContents) do
            frame.Visible = false
        end
        tabButton.BackgroundColor3 = Color3.fromRGB(60, 62, 66)
        contentFrame.Visible = true
    end)

    if #self.tabButtons == 1 then
        tabButton.BackgroundColor3 = Color3.fromRGB(60, 62, 66)
        contentFrame.Visible = true
        self.tabsContent.Visible = true
    end
end

-- Function to initialize the CloudHub instance
function CloudHub.new()
    local self = setmetatable({}, CloudHub)
    self:Initialize()
    return self
end

return CloudHub
